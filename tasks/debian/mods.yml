# Matomi code

---
- name: "Checking current MPM"
  ansible.builtin.command:
    cmd: "{{ _apache_cli_command }} -V"
  register: _apache_result_mpm_query
  changed_when: _apache_result_mpm_query.rc != 0

- name: "Set current MPM"
  ansible.builtin.set_fact:
    _apache_current_mpm: "{{ _apache_result_mpm_query.stdout_lines | select('search', '^Server MPM:') | first | default('') | regex_replace('^Server MPM:\\s+(\\S+)$', '\\1') }}"
  when: _apache_result_mpm_query.stdout_lines | select('search', '^Server MPM:') | length > 0

- name: "Adding MPM configuration file"
  ansible.builtin.template:
    src: "mods-available/{{ item }}.conf.j2"
    dest: "{{ _apache_mods_conf_directory }}/{{ item }}.conf"
    owner: "{{ _apache_user }}"
    group: "{{ _apache_group }}"
    mode: 0644
  loop: "{{ _apache_mpm_configs }}"
  notify: Reload apache

- name: "Enabling on redhat based MPM {{ apache_mpm }}"
  ansible.builtin.template:
    src: "mods-available/redhat/00-mpm.conf.j2"
    dest: "{{ _apache_mods_conf_directory }}/00-mpm.conf"
    owner: "{{ _apache_user }}"
    group: "{{ _apache_group }}"
    mode: 0644
  notify: Restart apache
  when: _ansible_os_family == 'redhat'

- name: "Enabling on debian based MPM {{ apache_mpm }}"
  community.general.apache2_module:
    state: "{{ item.state }}"
    name: "{{ item.name }}"
    ignore_configcheck: true
  loop: "{{ _apache_mpm_states | sort(attribute='state') }}"
  notify: Restart apache
  when: _ansible_os_family == 'debian'



# Original code 

# ---
# - name: "Loading modules"
#   community.general.apache2_module:
#     state: "{{ item.state }}"
#     name: "{{ item.id }}"
#     identifier: "{{ item.identifier | default(omit) }}"
#     force: true
#   loop: "{{ _apache_mods }}"
#   notify: Reload apache

# - name: "Loading proxy_fcgi module"
#   community.general.apache2_module:
#     state: "present"
#     name: "proxy_fcgi"
#   loop: "{{ apache_vhosts }}"
#   loop_control:
#     label: "{{ item.name }}"
#   when:
#     - item.php_fpm is defined
#     - item.php_fpm
#   notify: Reload apache

# - name: "Loading remoteip module"
#   community.general.apache2_module:
#     state: "present"
#     name: "remoteip"
#   when: apache_remoteip
#   notify: Reload apache
