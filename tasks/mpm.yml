---
- name: "Checking current MPM"
  ansible.builtin.command:
    cmd: "{{ _apache_cli_command }} -V"
  register: _apache_result_mpm_query
  changed_when: false

- name: "Debug command output"
  debug:
    var: _apache_result_mpm_query.stdout_lines

- name: "Check if MPM is set"
  set_fact:
    mpm_set: "{{ _apache_result_mpm_query.stdout_lines | select('search', '^Server MPM:') | length > 0 }}"

- name: "Set current MPM"
  ansible.builtin.set_fact:
    _apache_current_mpm: "{{ (_apache_result_mpm_query.stdout_lines | select('search', '^Server MPM:') | list | first).split(':')[1] | trim }}"
  when: mpm_set

- name: "Fail if MPM is not set"
  fail:
    msg: "Could not find 'Server MPM' in the Apache output."
  when: not mpm_set

- name: "Adding MPM configuration file"
  ansible.builtin.template:
    src: "mods-available/{{ item }}.conf.j2"
    dest: "{{ _apache_mods_conf_directory }}/{{ item }}.conf"
    owner: "{{ _apache_user }}"
    group: "{{ _apache_group }}"
    mode: 0644
  loop: "{{ _apache_mpm_configs }}"
  notify: Reload apache

- name: "Enabling on redhat based MPM {{ apache_mpm }}"
  ansible.builtin.template:
    src: "mods-available/redhat/00-mpm.conf.j2"
    dest: "{{ _apache_mods_conf_directory }}/00-mpm.conf"
    owner: "{{ _apache_user }}"
    group: "{{ _apache_group }}"
    mode: 0644
  notify: Restart apache
  when: _ansible_os_family == 'redhat'

- name: "Enabling on debian based MPM {{ apache_mpm }}"
  community.general.apache2_module:
    state: "{{ item.state }}"
    name: "{{ item.name }}"
    ignore_configcheck: true
  loop: "{{ _apache_mpm_states | sort(attribute='state') }}"
  notify: Restart apache
  when: _ansible_os_family == 'debian'
